<?php namespace App\Http\Controllers;

use App\Http\Requests;
use App\Http\Controllers\Controller;
use Input;
use Auth;
use Request;
use App\Subject;
use App\Ticket;
use App\Category;
use App\Section;

use App\Tag;
use App\TicketStatus;



class TicketsController extends Controller {

	/**
	 * Display a listing of the resource.
	 *
	 * @return Response
	 */
	public function index()
	{
		$tickets=Ticket::all();
		return view('tickets.index',compact('tickets'));
	}

	/**
	 * Show the form for creating a new resource.
	 *
	 * @return Response
	 */
	public function create()
	{
		$subjects=Subject::all();
		$categories=Category::all();
		$sections=Section::all();
		return view('tickets.create',compact('subjects','categories','sections'));
	}

	/**
	 * Store a newly created resource in storage.
	 *
	 * @return Response
	 */
	public function store()
	{
		$ticket= new Ticket;
		$ticket->description=Request::get('description');
		$ticket->priority=Request::get('priority');
		$ticket->file=Request::get('file');
		$ticket->category_id=Request::get('category');
		$ticket->subject_id=Request::get('subject');
		$ticket->user_id=Auth::user()->id;
		if(Auth::user()->type === "admin")
		{
			$ticket->tech_id=1;
			$ticket->admin_id=Auth::user()->id;
		}else{
			$ticket->tech_id=1;
			$ticket->admin_id=1;
		}
		$id=$ticket->save();
		$tickets=Ticket::all();
		return view('tickets.index',compact('tickets'));
	}

	/**
	 * Display the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function show($id)
	{
	// Get Related Tags
	$relatedTagIds = Ticket::find($id)->TicketTags;
	$relatedTickets=array();
	foreach($relatedTagIds as $relatedTagId){
	$relatedTickets[] = Tag::find($relatedTagId->id)->tickets;
	}
	// Get Related Assests
	$relatedAssets = Ticket::find($id)->TicketAssets;
	// Check status of ticket closed or open
	$checkStatus=TicketStatus::where('ticket_id', $id)->first();
	//tech id must accept null
	




		$ticket=Ticket::findOrFail($id);
		return view('tickets.show',compact('ticket','relatedTickets','relatedAssets','checkStatus'));
	}

	/**
	 * Show the form for editing the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function edit($id)
	{
		$ticket=Ticket::find($id);
		$subjects=Subject::all();
		$categories=Category::all();
		$sections=Section::all();
		return view('tickets.edit',compact('ticket','subjects','categories','sections'));
	}

	/**
	 * Update the specified resource in storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function update($id)
	{
		$ticket=  Ticket::find($id);
		$ticket->description=Request::get('description');
		$ticket->priority=Request::get('priority');
		$ticket->file=Request::get('file');
		$ticket->category_id=Request::get('category');
		$ticket->subject_id=Request::get('subject');
		$ticket->user_id=Auth::user()->id;
		if(Auth::user()->type === "admin")
		{
			$ticket->tech_id=1;
			$ticket->admin_id=Auth::user()->id;
		}else{
			$ticket->tech_id=1;
			$ticket->admin_id=1;
		}
		$ticket->save();
		return  redirect("/tickets/".$id);
	}

	/**
	 * Remove the specified resource from storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function destroy($id)
	{
		$ticket=Ticket::find($id);
		$ticket->delete();
	}
	

	/**
	* Function to add subject for ticket
	**/
	public function addSubject()
	{
		// Getting post data
	    if(Request::ajax()) {
	      // $data = Input::all();
	      $data = Request::input('newsubj');
	      $subject= new Subject;
	      $subject->name=$data;
	      $subject->save();
	      print_r($subject->id);
	    }
	}
	/**
	* Function to update status of ticket
	**/
	public function updatestatus()

	{

if(Request::ajax()) {
		$ticket_id = Request::input("ticket_id");
		$status = Request::input("status");}
	
		$ticketStatus=TicketStatus::where('ticket_id', $ticket_id)->first();
		$ticketStatus->value=$status;
		$ticketStatus->save();
print_r($ticketStatus->id);
	
}	
}
